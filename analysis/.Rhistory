Neighborhood_BrkSide +
Neighborhood_NAmes
# fit models
model <- lm(formula = model.formula, data = train)
model.reduced <- lm(formula = model.reduced.formula, data = train)
# ESS test on models
anova(model.reduced, model)
dum <- train %>% filter(GrLivArea < 4000)
# formula for model
model.formula = log(SalePrice) ~ (GrLivArea) +
Neighborhood_BrkSide +
Neighborhood_NAmes +
(GrLivArea) * Neighborhood_BrkSide +
(GrLivArea) * Neighborhood_NAmes
# model the mean response given equation above
model <- lm(formula = model.formula, data = dum)
summary(model)
confint(model)
# Set up repeated k-fold cross-validation
train.control <- trainControl(method = "cv", number = 10)
# Train the model
model.cv <- train(model.formula,
data = dum,
method = 'lm',
trControl = train.control)
# print model summary
model.cv
# get the CV results
res <- model.cv$results
# get cross-validated PRESS statistic
PCV <- PRESS.cv(model.cv)
# print accuracy metrics to md table
kable(data.frame('RMSE'=res$RMSE,
'CV Press'=PCV,
'Adjused R Squared'=res$Rsquared))
basic.fit.plots(dum, model)
ols_plot_resid_lev(model)
ols_plot_cooksd_bar(model)
train %>% ggplot(aes(x = log(GrLivArea))) +
geom_histogram() +
labs(title = 'Histogram of Living Room Area',
y = 'Frequency', x = 'Living Room Area')
train %>% ggplot(aes(x = GrLivArea)) +
geom_histogram() +
labs(title = 'Histogram of Living Room Area',
y = 'Frequency', x = 'Living Room Area')
dum <- train %>% filter(GrLivArea < 4000)
# formula for model
model.formula = log(SalePrice) ~ (GrLivArea) +
Neighborhood_BrkSide +
Neighborhood_NAmes +
(GrLivArea) : Neighborhood_BrkSide +
(GrLivArea) : Neighborhood_NAmes
# model the mean response given equation above
model <- lm(formula = model.formula, data = dum)
summary(model)
confint(model)
dum <- train %>% filter(GrLivArea < 4000)
# formula for model
model.formula = log(SalePrice) ~ (GrLivArea) +
Neighborhood_BrkSide +
Neighborhood_NAmes +
(GrLivArea) * Neighborhood_BrkSide +
(GrLivArea) * Neighborhood_NAmes
# model the mean response given equation above
model <- lm(formula = model.formula, data = dum)
summary(model)
confint(model)
### Compuational Setup
# libraries
library(knitr)
library(tidyverse)
library(olsrr)
library(gridExtra)
library(caret)
# set a random seed for repodicibility
set.seed(123)
# helper code
source('../helper/visual.R')
source('../helper/data_munging.R')
source('../helper/performance.R')
# load data
train <- read_csv('../data/train.csv')
test <- read_csv('../data/test.csv')
# select data of interest
train <- train %>%
filter(Neighborhood %in% c("Edwards", "BrkSide", "NAmes"))
train$Neighborhood <- as.factor(train$Neighborhood)
train %>% ggplot(aes(x = Neighborhood)) + geom_bar() +
labs(title = 'Count of Levels of Neighborhood',
y = 'Count')
train %>% ggplot(aes(x = SalePrice)) +
geom_histogram() +
labs(title = 'Histogram of Sale Price',
y = 'Frequency', x = 'Sale Price')
train %>% ggplot(aes(x = GrLivArea)) +
geom_histogram() +
labs(title = 'Histogram of Living Room Area',
y = 'Frequency', x = 'Living Room Area')
train %>% ggplot(aes(x = GrLivArea, y = SalePrice)) +
geom_point(alpha = 0.3) +
labs(title = 'Sale Price vs Living Room Area',
y = 'Log of Sale Price', x = 'Living Room Area')
train %>% ggplot(aes(x = log(GrLivArea), y = SalePrice)) +
geom_point(alpha = 0.3) +
labs(title = 'Sale Price vs Log of Living Room Area',
y = 'Sale Price', x = 'Log of Living Room Area')
train %>% ggplot(aes(x = log(GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
labs(title = 'Log of Sale Price vs Log of Living Room Area',
y = 'Log of Sale Price', x = 'Log of Living Room Area')
train %>% ggplot(aes(x = log(GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
labs(title = 'Log of Sale Price vs Log of Living Room Area',
y = 'Log of Sale Price', x = 'Log of Living Room Area') +
geom_text(aes(label = ifelse((log(GrLivArea) > 7.75 & log(SalePrice) > 11) |
(log(SalePrice) > 12.45),
SaleCondition, '')), hjust=0, vjust=0)
regplot.names <- train %>% filter(Neighborhood == 'NAmes') %>%
ggplot(aes(x = log(GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
ylim(10.5, 13) +
xlim(5.5, 9) +
geom_smooth(method = 'lm') +
labs(subtitle = 'Northwest Ames',
y = 'Log of Sale Price', x = 'Log of Living Room Area')
regplot.ed <- train %>% filter(Neighborhood == 'Edwards') %>%
ggplot(aes(x = log(GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
ylim(10.5, 13) +
xlim(5.5, 9) +
geom_smooth(method = 'lm') +
labs(subtitle = 'Edwards',
y = 'Log of Sale Price', x = 'Log of Living Room Area')
regplot.brk <- train %>% filter(Neighborhood == 'BrkSide') %>%
ggplot(aes(x = log(GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
ylim(10.5, 13) +
xlim(5.5, 9) +
geom_smooth(method = 'lm') +
labs(subtitle = 'Brook Side',
y = 'Log of Sale Price', x = 'Log of Living Room Area')
grid.arrange(regplot.names,regplot.ed,regplot.brk, nrow = 2,
top = 'Regression Plots for Neighborhoods')
train %>% ggplot(aes(x = log(GrLivArea), y = log(SalePrice), color = Neighborhood)) +
geom_point(alpha = 0.3) +
labs(subtitle = 'Brook Side',
y = 'Log of Sale Price', x = 'Log of Living Room Area')
# create dummy variables with Neighborhood == 'Edwards' as reference
train <- get.dummies(train, "Neighborhood", reference = 'Edwards')
# full model formula
model.formula = log(SalePrice) ~ log(GrLivArea) +
Neighborhood_BrkSide +
Neighborhood_NAmes +
log(GrLivArea) * Neighborhood_BrkSide +
log(GrLivArea) * Neighborhood_NAmes
# reduced model formula
model.reduced.formula = log(SalePrice) ~ log(GrLivArea) +
Neighborhood_BrkSide +
Neighborhood_NAmes
# fit models
model <- lm(formula = model.formula, data = train)
model.reduced <- lm(formula = model.reduced.formula, data = train)
# ESS test on models
anova(model.reduced, model)
# formula for model
model.formula = log(SalePrice) ~ log(GrLivArea) +
Neighborhood_BrkSide +
Neighborhood_NAmes +
log(GrLivArea) * Neighborhood_BrkSide +
log(GrLivArea) * Neighborhood_NAmes
# model the mean response given equation above
model <- lm(formula = model.formula, data = train)
summary(model)
confint(model)
# Set up repeated k-fold cross-validation
train.control <- trainControl(method = "cv", number = 10)
# Train the model
model.cv <- train(model.formula,
data = train,
method = 'lm',
trControl = train.control)
# print model summary
model.cv
# get the CV results
res <- model.cv$results
# get cross-validated PRESS statistic
PCV <- PRESS.cv(model.cv)
# print accuracy metrics to md table
kable(data.frame('RMSE'=res$RMSE,
'CV Press'=PCV,
'Adjused R Squared'=res$Rsquared))
basic.fit.plots(train, model)
ols_plot_resid_lev(model)
ols_plot_cooksd_bar(model)
knitr::opts_chunk$set(echo = TRUE)
train %>% ggplot(aes(x = SalePrice)) +
geom_histogram() +
facet_grid( Neighborhood ~ .) +
labs(title = 'Histogram of Sale Price',
y = 'Frequency', x = 'Sale Price')
train %>% ggplot(aes(x = GrLivArea)) +
geom_histogram() +
facet_grid( Neighborhood ~ .) +
labs(title = 'Histogram of Living Room Area',
y = 'Frequency', x = 'Living Room Area')
train %>% ggplot(aes(x = GrLivArea, y = SalePrice)) +
geom_point(alpha = 0.3) +
labs(title = 'Sale Price vs Living Room Area',
y = 'Sale Price', x = 'Living Room Area')
train %>% ggplot(aes(x = log(GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
labs(title = 'Sale Price vs Log of Living Room Area',
y = 'Sale Price', x = 'Log of Living Room Area')
train %>% ggplot(aes(x = log(GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
labs(title = 'Log of Sale Price vs Living Room Area',
y = 'Log of Sale Price', x = 'Living Room Area')
train %>% ggplot(aes(x = (GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
labs(title = 'Log of Sale Price vs Living Room Area',
y = 'Log of Sale Price', x = 'Living Room Area')
train %>% ggplot(aes(x = SalePrice)) +
geom_histogram() +
facet_grid(. ~ Neighborhood) +
labs(title = 'Histogram of Sale Price',
y = 'Frequency', x = 'Sale Price')
train %>% ggplot(aes(x = GrLivArea)) +
geom_histogram() +
facet_grid(. ~ Neighborhood) +
labs(title = 'Histogram of Living Room Area',
y = 'Frequency', x = 'Living Room Area')
regplot.names <- train %>% filter(Neighborhood == 'NAmes') %>%
ggplot(aes(x = log(GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
ylim(10.5, 13) +
xlim(5.5, 9) +
geom_smooth(method = 'lm') +
labs(subtitle = 'Northwest Ames',
y = 'Log of Sale Price', x = 'Log of Living Room Area')
regplot.ed <- train %>% filter(Neighborhood == 'Edwards') %>%
ggplot(aes(x = log(GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
ylim(10.5, 13) +
xlim(5.5, 9) +
geom_smooth(method = 'lm') +
labs(subtitle = 'Edwards',
y = 'Log of Sale Price', x = 'Log of Living Room Area')
regplot.brk <- train %>% filter(Neighborhood == 'BrkSide') %>%
ggplot(aes(x = log(GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
ylim(10.5, 13) +
xlim(5.5, 9) +
geom_smooth(method = 'lm') +
labs(subtitle = 'Brook Side',
y = 'Log of Sale Price', x = 'Log of Living Room Area')
grid.arrange(regplot.names,regplot.ed,regplot.brk, nrow = 2,
top = 'Regression Plots for Neighborhoods')
train %>% ggplot(aes(x = log(GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
labs(title = 'Log of Sale Price vs Log of Living Room Area',
y = 'Log of Sale Price', x = 'Log of Living Room Area') +
geom_text(aes(label = ifelse((log(GrLivArea) > 7.75 & log(SalePrice) > 11) |
(log(SalePrice) > 12.45),
SaleCondition, '')), hjust=0, vjust=0)
train %>% ggplot(aes(x = log(GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
labs(title = 'Log of Sale Price vs Log of Living Room Area',
y = 'Log of Sale Price', x = 'Log of Living Room Area') +
geom_text(aes(label = ifelse((log(GrLivArea) > 7.75 & log(SalePrice) > 11) |
(log(SalePrice) > 12.45),
SaleCondition, '')), hjust=0, vjust=0)
train %>% ggplot(aes(x = log(GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
labs(title = 'Log of Sale Price vs Log of Living Room Area',
y = 'Log of Sale Price', x = 'Log of Living Room Area') +
geom_text(aes(label = ifelse((log(GrLivArea) > 7.75 & log(SalePrice) > 11) |
(log(SalePrice) > 12.45),
SaleCondition, '')), hjust=0, vjust=0)
regplot.names <- train %>% filter(Neighborhood == 'NAmes') %>%
ggplot(aes(x = (GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
ylim(10.5, 13) +
xlim(5.5, 9) +
geom_smooth(method = 'lm') +
labs(subtitle = 'Northwest Ames',
y = 'Log of Sale Price', x = 'Log of Living Room Area')
regplot.ed <- train %>%
filter(GrLivArea < 4000) %>%
filter(Neighborhood == 'Edwards') %>%
ggplot(aes(x = (GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
ylim(10.5, 13) +
xlim(5.5, 9) +
geom_smooth(method = 'lm') +
labs(subtitle = 'Edwards',
y = 'Log of Sale Price', x = 'Log of Living Room Area')
regplot.brk <- train %>% filter(Neighborhood == 'BrkSide') %>%
ggplot(aes(x = (GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
ylim(10.5, 13) +
xlim(5.5, 9) +
geom_smooth(method = 'lm') +
labs(subtitle = 'Brook Side',
y = 'Log of Sale Price', x = 'Log of Living Room Area')
grid.arrange(regplot.names,regplot.ed,regplot.brk, nrow = 2,
top = 'Regression Plots for Neighborhoods')
regplot.names <- train %>% filter(Neighborhood == 'NAmes') %>%
ggplot(aes(x = (GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
#ylim(10.5, 13) +
#xlim(5.5, 9) +
geom_smooth(method = 'lm') +
labs(subtitle = 'Northwest Ames',
y = 'Log of Sale Price', x = 'Log of Living Room Area')
regplot.ed <- train %>%
filter(GrLivArea < 4000) %>%
filter(Neighborhood == 'Edwards') %>%
ggplot(aes(x = (GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
#ylim(10.5, 13) +
#xlim(5.5, 9) +
geom_smooth(method = 'lm') +
labs(subtitle = 'Edwards',
y = 'Log of Sale Price', x = 'Log of Living Room Area')
regplot.brk <- train %>% filter(Neighborhood == 'BrkSide') %>%
ggplot(aes(x = (GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
#ylim(10.5, 13) +
#xlim(5.5, 9) +
geom_smooth(method = 'lm') +
labs(subtitle = 'Brook Side',
y = 'Log of Sale Price', x = 'Log of Living Room Area')
grid.arrange(regplot.names,regplot.ed,regplot.brk, nrow = 2,
top = 'Regression Plots for Neighborhoods')
regplot.names <- train %>% filter(Neighborhood == 'NAmes') %>%
ggplot(aes(x = (GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
#ylim(10.5, 13) +
#xlim(5.5, 9) +
geom_smooth(method = 'lm') +
labs(subtitle = 'Northwest Ames',
y = 'Log of Sale Price', x = 'Living Room Area')
regplot.ed <- train %>%
filter(GrLivArea < 4000) %>%
filter(Neighborhood == 'Edwards') %>%
ggplot(aes(x = (GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
#ylim(10.5, 13) +
#xlim(5.5, 9) +
geom_smooth(method = 'lm') +
labs(subtitle = 'Edwards',
y = 'Log of Sale Price', x = 'Living Room Area')
regplot.brk <- train %>% filter(Neighborhood == 'BrkSide') %>%
ggplot(aes(x = (GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
#ylim(10.5, 13) +
xlim(0, 3500) +
geom_smooth(method = 'lm') +
labs(subtitle = 'Brook Side',
y = 'Log of Sale Price', x = 'Living Room Area')
grid.arrange(regplot.names,regplot.ed,regplot.brk, nrow = 2,
top = 'Regression Plots for Neighborhoods')
regplot.names <- train %>% filter(Neighborhood == 'NAmes') %>%
ggplot(aes(x = (GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
#ylim(10.5, 13) +
xlim(0, 3500) +
geom_smooth(method = 'lm') +
labs(subtitle = 'Northwest Ames',
y = 'Log of Sale Price', x = 'Living Room Area')
regplot.ed <- train %>%
filter(GrLivArea < 4000) %>%
filter(Neighborhood == 'Edwards') %>%
ggplot(aes(x = (GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
#ylim(10.5, 13) +
xlim(0, 3500) +
geom_smooth(method = 'lm') +
labs(subtitle = 'Edwards',
y = 'Log of Sale Price', x = 'Living Room Area')
regplot.brk <- train %>% filter(Neighborhood == 'BrkSide') %>%
ggplot(aes(x = (GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
#ylim(10.5, 13) +
xlim(0, 3500) +
geom_smooth(method = 'lm') +
labs(subtitle = 'Brook Side',
y = 'Log of Sale Price', x = 'Living Room Area')
grid.arrange(regplot.names,regplot.ed,regplot.brk, nrow = 2,
top = 'Regression Plots for Neighborhoods')
regplot.names <- train %>% filter(Neighborhood == 'NAmes') %>%
ggplot(aes(x = (GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
ylim(10, 13) +
xlim(0, 3500) +
geom_smooth(method = 'lm') +
labs(subtitle = 'Northwest Ames',
y = 'Log of Sale Price', x = 'Living Room Area')
regplot.ed <- train %>%
filter(GrLivArea < 4000) %>%
filter(Neighborhood == 'Edwards') %>%
ggplot(aes(x = (GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
ylim(10, 13) +
xlim(0, 3500) +
geom_smooth(method = 'lm') +
labs(subtitle = 'Edwards',
y = 'Log of Sale Price', x = 'Living Room Area')
regplot.brk <- train %>% filter(Neighborhood == 'BrkSide') %>%
ggplot(aes(x = (GrLivArea), y = log(SalePrice))) +
geom_point(alpha = 0.3) +
ylim(10, 13) +
xlim(0, 3500) +
geom_smooth(method = 'lm') +
labs(subtitle = 'Brook Side',
y = 'Log of Sale Price', x = 'Living Room Area')
grid.arrange(regplot.names,regplot.ed,regplot.brk, nrow = 2,
top = 'Regression Plots for Neighborhoods')
# create dummy variables with Neighborhood == 'Edwards' as reference
train <- get.dummies(train, "Neighborhood", reference = 'Edwards')
# full model formula
model.formula = log(SalePrice) ~ (GrLivArea) +
Neighborhood_BrkSide +
Neighborhood_NAmes +
(GrLivArea) * Neighborhood_BrkSide +
(GrLivArea) * Neighborhood_NAmes
# reduced model formula
model.reduced.formula = log(SalePrice) ~ (GrLivArea) +
Neighborhood_BrkSide +
Neighborhood_NAmes
# fit models
model <- lm(formula = model.formula, data = train)
model.reduced <- lm(formula = model.reduced.formula, data = train)
# ESS test on models
anova(model.reduced, model)
# formula for model
model.formula = log(SalePrice) ~ (GrLivArea) +
Neighborhood_BrkSide +
Neighborhood_NAmes +
(GrLivArea) * Neighborhood_BrkSide +
(GrLivArea) * Neighborhood_NAmes
# model the mean response given equation above
model <- lm(formula = model.formula, data = train)
summary(model)
confint(model)
# create dummy variables with Neighborhood == 'Edwards' as reference
train <- get.dummies(train, "Neighborhood", reference = 'Edwards')
# remove suspect points from training data
train.mod <- train %>% filter(GrLivArea < 4000)
# full model formula
model.formula = log(SalePrice) ~ (GrLivArea) +
Neighborhood_BrkSide +
Neighborhood_NAmes +
(GrLivArea) * Neighborhood_BrkSide +
(GrLivArea) * Neighborhood_NAmes
# reduced model formula
model.reduced.formula = log(SalePrice) ~ (GrLivArea) +
Neighborhood_BrkSide +
Neighborhood_NAmes
# fit models
model <- lm(formula = model.formula, data = train.mod)
model.reduced <- lm(formula = model.reduced.formula, data = train.mod)
# ESS test on models
anova(model.reduced, model)
# formula for model
model.formula = log(SalePrice) ~ (GrLivArea) +
Neighborhood_BrkSide +
Neighborhood_NAmes +
(GrLivArea) * Neighborhood_BrkSide +
(GrLivArea) * Neighborhood_NAmes
# model the mean response given equation above
model <- lm(formula = model.formula, data = train.mod)
summary(model)
confint(model)
# Set up repeated k-fold cross-validation
train.control <- trainControl(method = "cv", number = 10)
# Train the model
model.cv <- train(model.formula,
data = train.mod,
method = 'lm',
trControl = train.control)
# print model summary
model.cv
# get the CV results
res <- model.cv$results
# get cross-validated PRESS statistic
PCV <- PRESS.cv(model.cv)
# print accuracy metrics to md table
kable(data.frame('RMSE'=res$RMSE,
'CV Press'=PCV,
'Adjused R Squared'=res$Rsquared))
# Set up repeated k-fold cross-validation
train.control <- trainControl(method = "cv", number = 10)
# Train the model
model.cv <- train(model.formula,
data = train.mod,
method = 'lm',
trControl = train.control)
# print model summary
model.cv
# get the CV results
res <- model.cv$results
# get cross-validated PRESS statistic
PCV <- PRESS.cv(model.cv)
# print accuracy metrics to md table
kable(data.frame('RMSE'=res$RMSE,
'CV Press'=PCV,
'Adjused R Squared'=res$Rsquared))
basic.fit.plots(train.mod, model)
ols_plot_resid_lev(model)
ols_plot_cooksd_bar(model)
